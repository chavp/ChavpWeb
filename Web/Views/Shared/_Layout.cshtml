<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="../../Content/bootstrap-3.0.0/assets/js/html5shiv.js"></script>
      <script src="../../Content/bootstrap-3.0.0/assets/js/respond.min.js"></script>
    <![endif]-->
</head>
<body>
    <div id="wrap">
        <div class="navbar navbar-inverse navbar-fixed-top" role="banner">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" style="color: #fff" href="#">Agile Studio</a>
                </div>

                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        @Html.MenuLink("Home", "Index", "Home")
                        @if (Request.IsAuthenticated)
                        {
                            if (User.IsInRole("Admin"))
                            {
                            <text>
                            @Html.MenuLink("Products", "Index", "Products")
                            <li><a href="#features">Features</a></li>
                            <li><a href="#sourceCode">Source Code</a></li>
                            <li><a href="#buildJobs">Build</a></li>
                            <li><a href="#testJobs">Test</a></li>
                            <li><a href="#deployJobs">Deploy</a></li>
                            <li><a href="#scheduleJobs">Schedule</a></li>
                            </text>
                            }
                        }
                        else
                        {
                            <text>
                            <li><a href="#about"><i class="icon-book"></i>About</a></li>
                            <li><a href="#contact">Contact</a></li>
                            </text>
                        }
                    </ul>

                    @{
                        var htmlDic = new Dictionary<string, object>();
                        htmlDic.Add("class", "navbar-form navbar-right");
                        if (!Request.IsAuthenticated)
                        {
                            htmlDic.Add("id", "signInForm");
                            using (Html.BeginForm("SignIn", "Account", FormMethod.Post, htmlDic))
                            {
                        <text>
                        <div class="form-group">
                            <input type="text" placeholder="Email" class="form-control" name="Email" />
                        </div>
                        <div class="form-group">
                            <input type="password" placeholder="Password" class="form-control" name="Password" />
                        </div>
                        @Html.AntiForgeryToken()
                        <a href="javascript:document.getElementById('signInForm').submit()" class="btn btn-primary">Sign in</a>
                        </text>
                            }
                        }
                        else
                        {
                            htmlDic.Add("id", "signOutForm");
                        <text>
                        @using (Html.BeginForm("SignOut", "Account", FormMethod.Post, htmlDic))
                        {
                            <a id="signin-info" data-toggle="modal" class="btn btn-success" href="#profile" data-bind="attr: {title: Roles}">Hello, <span data-bind="text: Name"></span></a>
                            <span>|</span>
                            @Html.AntiForgeryToken()
                            <a href="javascript:document.getElementById('signOutForm').submit()" class="btn btn-danger">Sign Out</a>
                        }
                        </text>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="container">
            <div class="page-header">
                <h1>@ViewBag.Title</h1>
            </div>
            @RenderBody()
        </div>
    </div>

    <div id="footer">
        <div class="container">
            <p class="text-muted credit">© By <a href="http://chavp.wordpress.com" target="_blank">#:P</a></p>
        </div>
    </div>

    @if (Request.IsAuthenticated)
    {
        <text>
        <div id="profile" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">Your Profile</h4>
                    </div>

                    <div class="modal-body">
                        <p data-bind="text: Roles"></p>
                        <p><strong data-bind="text: Name"></strong></p>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary">Save changes</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>

                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->
        </text>
    }

    @Scripts.Render("~/bundles/js")

    <script>
        $(function () {
            @if(Request.IsAuthenticated)
            {
                <text>
                function UserViewModel(data) {
                    var self = this;
                    data = data || {};

                    self.Name = ko.observable(data.Name);
                    self.Roles = ko.observable(data.Roles);
                }
                var data = {Name: "@User.Identity.Name", Roles: "@string.Join(",", Roles.GetRolesForUser())"};
                var userVM = new UserViewModel(data);

                ko.applyBindings(userVM, $('#signin-info')[0]);
                ko.applyBindings(userVM, $('#profile')[0]);
                </text>
            }
        });
    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
